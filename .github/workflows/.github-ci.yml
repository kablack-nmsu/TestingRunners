name: Python Build and Test Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-job:
    runs-on: ubuntu-latest
    steps:
      - name: Manual Git Checkout
        run: |
          # The runner is already in the $GITHUB_WORKSPACE directory.
          # We use git clone . to pull the remote code into the current directory.
          # The URL is provided by GitHub context variables.
          # We check out the specific commit hash or branch being run.
          git clone --depth 1 "https://github.com/${{ github.repository }}" . 
          git checkout ${{ github.sha }}

      - name: Execute Build Commands
        run: |
          hostname
          python3 --version
          echo "Compile complete."

  test-job:
    needs: build-job
    runs-on: ubuntu-latest

    steps:
      - name: Manual Git Checkout
        run: |
          # Repeat the manual checkout to get the code onto this new test runner
          git clone --depth 1 "https://github.com/${{ github.repository }}" . 
          git checkout ${{ github.sha }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Deploy Virtual Environment and Run Script
        run: |
          # 1. Create and activate venv
          python -m venv venvRG
          source venvRG/bin/activate

          echo "--- VENV Activated. Running script ---"

          # 2. *** EXECUTE SCRIPT ***
          # Uses the simplified relative path 'app/randomgrid.py'
          ./venvRG/bin/python app/randomgrid.py

          # 3. Cleanup
          deactivate
          rm -rf venvRG

          echo "Virtual environment cleanup complete."
